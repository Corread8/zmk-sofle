layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6       &kp F7       &kp F8      &kp F9       &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &kp EQUAL    &kp LPAR     &kp LBKT    &kp LBRC     &trans       &trans
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &kp EXCL     &kp HASH     &kp AMPS    &kp GRAVE    &trans       &trans
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &kp SQT      &kp MINUS    &kp LT      &kp QMARK    &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans       &trans       &trans      &trans       &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "symbols";
        };#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    behaviors {
        // Simple acute accent - outputs the accent mark
        acute_accent: acute_accent {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1        &kp N2        &kp N3        &kp N4      &kp N5       &kp UP_ARROW     &kp N6         &kp N7         &kp N8     &kp N9           &kp N0      &kp DELETE
&kp TAB     &kp Q         &kp W         &kp F         &kp P       &kp B        &kp DOWN_ARROW   &kp J          &kp L          &kp U      &kp Y            &kp SEMI    &kp BSLH
&kp LSHFT   &kp A         &kp R         &kp S         &kp T       &kp G        &kp LEFT_ARROW   &kp M          &kp N          &kp E      &kp I            &kp O       &kp APOS
&kp LCTRL   &kp Z         &kp X         &kp C         &kp D       &kp V        &kp RIGHT_ARROW  &kp K          &kp H          &kp COMMA  &kp DOT          &kp FSLH    &kp ENTER
&kp C_MUTE  &lt 3 LGUI    &lt 4 ENTER   &kp LEFT_ALT  &kp LSHFT   &kp SPACE    &kp ENTER        &kp BACKSPACE  &kp ENTER      &mo 2      &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6       &kp F7       &kp F8      &kp F9       &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &kp EQUAL    &kp LPAR     &kp LBRC    &kp LBKT     &trans       &trans
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &kp EXCL     &acute_accent &trans     &kp GRAVE    &trans       &trans
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &kp SQT      &kp MINUS    &kp LT      &kp QMARK    &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans       &trans       &trans      &trans       &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "symbols";
        };

        layer_3 {
            bindings = <
&trans  &trans     &trans     &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp COMMA  &kp UP     &kp PERIOD &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT   &kp DOWN   &kp RIGHT  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
            
            display-name = "arrows";
        };

        layer_4 {
            bindings = <
&trans       &trans       &trans       &trans       &trans       &trans       &trans  &trans                  &trans                  &trans                  &trans                  &trans  &trans
&trans       &kp N1       &kp N2       &kp N3       &kp N4       &kp N5       &trans  &kp LS(LC(LA(J)))       &kp LS(LC(LA(L)))       &kp LS(LC(LA(U)))       &kp LS(LC(LA(Y)))       &trans  &trans
&trans       &kp N6       &kp N7       &kp N8       &kp N9       &kp N0       &trans  &kp LS(LC(LA(M)))       &kp LS(LC(LA(N)))       &kp LS(LC(LA(E)))       &kp LS(LC(LA(I)))       &kp LS(LC(LA(O)))  &trans
&trans       &kp LS(LC(LA(Z))) &kp LS(LC(LA(X))) &kp LS(LC(LA(C))) &kp LS(LC(LA(D))) &kp LS(LC(LA(V))) &trans  &kp LS(LC(LA(K)))       &kp LS(LC(LA(H)))       &trans                  &trans                  &trans  &trans
&trans       &trans       &trans       &trans       &trans       &trans       &trans  &trans                  &trans                  &trans                  &trans                  &trans
            >;
            
            display-name = "numbers";
        };
    };
};
